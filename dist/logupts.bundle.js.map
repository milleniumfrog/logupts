{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/placeholder.ts","webpack:///./node_modules/strplace/dist/strplace.js","webpack:///./src/logupts.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","DefaultPlaceholders","keys","replacer","fillStrWithZeros","String","Date","getDate","flags","getDay","getMonth","getFullYear","getHours","getMinutes","getSeconds","none","passArguments","service","length","msg","Error","replaceSingle","string","replaceContent","res","regex","RegExp","counter","exec","slice","replace","__webpack_exports__","placeholder","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","defaultOptions","prefix","postfix","placeholders","quiet","transports","customFunctions","logType","logStack","logupts_LogUpTs","[object Object]","customOptions","setInternals","this","options","undefined","internals","message","opt","mergeOptions","str","replaceComplex","complexKeys","complex","called","args","toPass","maxIndex","inComplex","index","res1","res2","removeEscapesFromKeys","asyncThings","transport","push","asyncExec","all","console","custom","error","stack"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,kGClFA,MAAAC,IAGAC,MAAA,YACAC,SAAA,OACsBC,EAAA,EAAAC,QAAA,IAAAC,MAAAC,cAEtBC,MAAA,MAGAN,MAAA,WACAC,SAAA,OACsBC,EAAA,EAAAC,QAAA,IAAAC,MAAAG,aAEtBD,MAAA,MAGAN,MAAA,aACAC,SAAA,OACsBC,EAAA,EAAAC,QAAA,IAAAC,MAAAI,WAAA,MAEtBF,MAAA,MAGAN,MAAA,YACAC,SAAA,QACsB,IAAAG,MAAAK,gBAEtBH,MAAA,MAGAN,MAAA,aACAC,SAAA,OACsBC,EAAA,EAAAC,QAAA,IAAAC,MAAAM,eAEtBJ,MAAA,MAGAN,MAAA,eACAC,SAAA,OACsBC,EAAA,EAAAC,QAAA,IAAAC,MAAAO,iBAEtBL,MAAA,MAGAN,MAAA,eACAC,SAAA,OACsBC,EAAA,EAAAC,QAAA,IAAAC,MAAAQ,iBAEtBN,MAAA,MAGAN,MAAA,eACAC,SAAA,CAAAY,EAAAC,QACuBA,EAAAC,SAAA,aAEvBT,MAAA,MAQA,SAAAJ,EAAAc,EAAAC,GACA,GAAAD,EAAAC,EAAAD,OACA,UAAAE,MAAA,iDAGA,QAAAnD,EAAAkD,EAAAD,OAAgCjD,EAAAiD,IAAYjD,EAC5CkD,EAAA,IAAAA,EAGA,OAAAA,mDCzEA,SAAAE,EAAA7B,EAAA8B,EAAAC,EAAAf,EAAAQ,GACAR,KAAA,IACA,IACAgB,EADAC,EAAA,IAAAC,OAAAlC,EAAAgB,GAEAmB,EAAA,EACA,aAAAH,EAAAC,EAAAG,KAAAN,EAAAO,MAAAF,MACAnC,IAAAsC,QAAA,IAAAJ,OAAA,gBACAJ,IAAAQ,QAAAtC,EAAA,mBAAA+B,IAAA,GAAAP,GAAAO,KACAI,EAEA,OAAAL,wCCVAzD,EAAAU,EAAAwD,EAAA,wCAAAC,EAAA,QAAAC,EAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,WAAAD,MAAAE,UAAA,SAAAC,EAAAC,GACA,SAAAC,EAAAvD,GAAmC,IAAMwD,EAAAL,EAAAM,KAAAzD,IAA+B,MAAA0D,GAAYJ,EAAAI,IACpF,SAAAC,EAAA3D,GAAkC,IAAMwD,EAAAL,EAAA,MAAAnD,IAAmC,MAAA0D,GAAYJ,EAAAI,IACvF,SAAAF,EAAAI,GAA+BA,EAAAC,KAAAR,EAAAO,EAAA5D,OAAA,IAAAkD,EAAA,SAAAG,GAAiEA,EAAAO,EAAA5D,SAAyB8D,KAAAP,EAAAI,GACzHH,GAAAL,IAAAY,MAAAf,EAAAC,QAAAQ,WAMA,IAAAO,GACAC,OAAA,eACAC,QAAA,GACAC,aAAArB,EAAA,EACAsB,OAAA,EACAC,cACAC,mBACAC,QAAA,MACAC,UAAA,SAEAC,EACAC,YAAAC,EAAAC,GACAD,QAEAE,KAAAC,SACAb,YAAAc,IAAAJ,EAAAV,OAAAU,EAAAV,OAAAD,EAAAC,OACAC,aAAAa,IAAAJ,EAAAT,QAAAS,EAAAT,QAAAF,EAAAE,QACAC,kBAAAY,IAAAJ,EAAAR,aAAAQ,EAAAR,aAAAH,EAAAG,aACAC,WAAAW,IAAAJ,EAAAP,MAAAO,EAAAP,MAAAJ,EAAAI,MACAC,gBAAAU,IAAAJ,EAAAN,WAAAM,EAAAN,WAAAL,EAAAK,WACAC,qBAAAS,IAAAJ,EAAAL,gBAAAK,EAAAL,gBAAAN,EAAAM,gBACAC,aAAAQ,IAAAJ,EAAAJ,QAAAI,EAAAJ,QAAAP,EAAAO,QACAC,cAAAO,IAAAJ,EAAAH,SAAAG,EAAAH,SAAAR,EAAAQ,UAGAK,KAAAG,WACAjD,QAAA,OAEA,QAAAzB,KAAAsE,MACAC,KAAAG,UAAA1E,GAAAsE,EAAAtE,GAGAoE,aAAAC,GACA,OACAV,YAAAc,IAAAJ,EAAAV,OAAAU,EAAAV,OAAAY,KAAAC,QAAAb,OACAC,aAAAa,IAAAJ,EAAAT,QAAAS,EAAAT,QAAAW,KAAAC,QAAAZ,QACAC,kBAAAY,IAAAJ,EAAAR,aAAAQ,EAAAR,aAAAU,KAAAC,QAAAX,aACAC,WAAAW,IAAAJ,EAAAP,MAAAO,EAAAP,MAAAS,KAAAC,QAAAV,MACAC,gBAAAU,IAAAJ,EAAAN,WAAAM,EAAAN,WAAAQ,KAAAC,QAAAT,WACAC,qBAAAS,IAAAJ,EAAAL,gBAAAK,EAAAL,gBAAAO,KAAAC,QAAAR,gBACAC,aAAAQ,IAAAJ,EAAAJ,QAAAI,EAAAJ,QAAAM,KAAAC,QAAAP,QACAC,cAAAO,IAAAJ,EAAAH,SAAAG,EAAAH,SAAAK,KAAAC,QAAAN,UAGAE,OAAAC,EAAAC,EAAAK,GACA,OAAAlC,EAAA8B,UAAA,qBAEA,IAAAK,EAAAL,KAAAM,aAAAR,GAEA,QAAArE,KAAAsE,EACAC,KAAAG,UAAA1E,GAAAsE,EAAAtE,GAGA,IAAA8E,KAAyBF,EAAAjB,SAAagB,IAAUC,EAAAhB,UAChDkB,EDpDA,SAAAC,EAAAC,EAAAlD,EAAAN,GACA,QAAAyD,KAAAD,EACA,QAAAP,IAAAQ,EAAAvE,KAAA,GACAoB,GAAA,IAAAmD,EAAAC,OAAArD,EAAAoD,EAAAvE,KAAA,GAAAoB,EAAA,CAAAqD,EAAAC,IAAyGH,EAAAtE,SAAA,GAAAyE,GAAuCH,EAAAjE,MAAAQ,GAAAM,MAEhJ,CACA,IAAAuD,GAAA,EACA,QAAAC,KAAAN,EAAA,CACA,IACAhD,EADA,IAAAE,OAAAoD,EAAA5E,KAAA,GAAA4E,EAAAtE,OACAoB,KAAAN,GACA,OAAAE,IACAqD,IAAArD,EAAAuD,MAAAvD,EAAAuD,MAAAF,GAGAA,EAAA,IACAvD,IAAAO,MAAA,EAAAgD,GAAAN,EAAAC,EAAAlD,EAAAO,MAAAgD,KAEA,IAAApD,EAAA,IAAAC,OAAA+C,EAAAvE,KAAA,GAAAuE,EAAAjE,OACAwE,EAAAvD,EAAAG,KAAAN,GACA,UAAA0D,EAAA,CAEA,IAAAC,GADAxD,EAAA,IAAAC,OAAA+C,EAAAvE,KAAA,GAAAuE,EAAAjE,QACAoB,KAAAN,GACA4D,GAAAT,EAAAvE,KAAA,GAAA4B,QAAA,IAAAJ,OAAA,gBAAA+C,EAAAvE,KAAA,GAAA4B,QAAA,IAAAJ,OAAA,iBACA,OAAAuD,IACA3D,IAAAO,MAAA,EAAAmD,EAAAD,OAAAN,EAAAtE,SAAAmB,EAAAO,MAAAmD,EAAAD,MAAAG,EAAA,GAAAhE,OAAA+D,EAAAF,OAAA/D,GAAAM,EAAAO,MAAAoD,EAAAF,MAAAG,EAAA,GAAAhE,UAKA,OAAAI,ECuBAiD,CAAAR,KAAAC,QAAAX,iBAAAiB,EAAAP,KAAAG,WACA,IAAAiB,KAEA,QAAAC,KAAAhB,EAAAb,eACA4B,EAAAE,KAAAD,EAAAxD,KAAAmC,KAAAG,UAAAI,IAEA,QAAAgB,KAAAlB,EAAAZ,oBACA2B,EAAAE,KAAAC,EAAAhB,EAAAP,KAAAG,UAAAE,IAOA,aALA9B,QAAAiD,IAAAJ,GAEAf,EAAAd,YAAAW,IAAAuB,QAAApB,EAAAX,SAAA,QACA+B,QAAApB,EAAAX,SAAA,OAAAa,GAEAA,IAIAV,IAAAU,EAAAT,GACA,OAAA5B,EAAA8B,UAAA,qBACA,aAAAA,KAAA0B,OAAA5B,OAA2D5C,QAAA,OAAiBqD,KAG5EV,MAAA8B,EAAA7B,GACA,OAAA5B,EAAA8B,UAAA,qBACA,IAAAK,EAAAL,KAAAM,aAAAR,OAEAO,EAAAX,QAAA,QACA,IAAAa,EAAAoB,aAAAtE,SAAkDsE,EAAAvB,UAAgBC,EAAAV,eAAAO,IAAAyB,EAAAC,MAAA,KAAAD,EAAAC,MAAA,KAAsED,EACxI,aAAA3B,KAAA0B,OAAArB,GAA2CnD,QAAA,SAAmBqD","file":"logupts.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export const DefaultPlaceholders = [\n    // get day 1-31\n    {\n        keys: ['{{date}}'],\n        replacer: () => {\n            return `${fillStrWithZeros(2, String((new Date()).getDate()))}`;\n        },\n        flags: 'g'\n    },\n    {\n        keys: ['{{day}}'],\n        replacer: () => {\n            return `${fillStrWithZeros(2, String((new Date()).getDay()))}`;\n        },\n        flags: 'g'\n    },\n    {\n        keys: ['{{month}}'],\n        replacer: () => {\n            return `${fillStrWithZeros(2, String((new Date()).getMonth() + 1))}`;\n        },\n        flags: 'g'\n    },\n    {\n        keys: ['{{year}}'],\n        replacer: () => {\n            return `${(new Date()).getFullYear()}`;\n        },\n        flags: 'g'\n    },\n    {\n        keys: ['{{hours}}'],\n        replacer: () => {\n            return `${fillStrWithZeros(2, String((new Date()).getHours()))}`;\n        },\n        flags: 'g'\n    },\n    {\n        keys: ['{{minutes}}'],\n        replacer: () => {\n            return `${fillStrWithZeros(2, String((new Date()).getMinutes()))}`;\n        },\n        flags: 'g'\n    },\n    {\n        keys: ['{{seconds}}'],\n        replacer: () => {\n            return `${fillStrWithZeros(2, String((new Date()).getSeconds()))}`;\n        },\n        flags: 'g'\n    },\n    {\n        keys: ['{{service}}'],\n        replacer: (none, passArguments) => {\n            return `[${passArguments.service || 'DEFAULT'}]`;\n        },\n        flags: 'g'\n    },\n];\n/**\n * fill up a string with zeros\n * @param length\n * @param msg\n */\nexport function fillStrWithZeros(length, msg) {\n    if (length < msg.length) {\n        throw new Error('the message is longer than the wished length.');\n    }\n    else {\n        for (let i = msg.length; i < length; ++i) {\n            msg = '0' + msg;\n        }\n    }\n    return msg;\n}\n","export function replaceSingle(key, string, replaceContent, flags, passArguments) {\n    flags = flags || 'g';\n    let regex = new RegExp(key, flags);\n    let res;\n    let counter = 0;\n    while ((res = regex.exec(string.slice(counter))) !== null) {\n        key = key.replace((new RegExp('\\\\\\\\', 'g')), '');\n        string = string.replace(key, typeof replaceContent === 'function' ? replaceContent('', passArguments) : replaceContent);\n        ++counter;\n    }\n    return string;\n}\n;\nexport function replaceComplex(complexKeys, string, passArguments) {\n    for (let complex of complexKeys) {\n        if (complex.keys[1] === undefined) {\n            string = complex.called !== true ? replaceSingle(complex.keys[0], string, (args, toPass) => { return complex.replacer('', toPass); }, complex.flags, passArguments) : string;\n        }\n        else {\n            let maxIndex = -1;\n            for (let inComplex of complexKeys) {\n                let regex = new RegExp(inComplex.keys[0], inComplex.flags);\n                let res = regex.exec(string);\n                if (res !== null) {\n                    maxIndex = maxIndex < res.index ? res.index : maxIndex;\n                }\n            }\n            if (maxIndex > 0) {\n                string = string.slice(0, maxIndex) + replaceComplex(complexKeys, string.slice(maxIndex));\n            }\n            let regex = new RegExp(complex.keys[0], complex.flags);\n            let res1 = regex.exec(string);\n            if (res1 !== null) {\n                regex = new RegExp(complex.keys[1], complex.flags);\n                let res2 = regex.exec(string);\n                let removeEscapesFromKeys = [complex.keys[0].replace((new RegExp('\\\\\\\\', 'g')), ''), complex.keys[1].replace((new RegExp('\\\\\\\\', 'g')), '')];\n                if (res2 !== null) {\n                    string = string.slice(0, res1.index) + complex.replacer(string.slice(res1.index + removeEscapesFromKeys[0].length, res2.index), passArguments) + string.slice(res2.index + removeEscapesFromKeys[1].length);\n                }\n            }\n        }\n    }\n    return string;\n}\n//# sourceMappingURL=strplace.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DefaultPlaceholders } from './placeholder';\nimport { replaceComplex } from 'strplace';\nexport { DefaultPlaceholders } from './placeholder';\nlet defaultOptions = {\n    prefix: '{{service}} ',\n    postfix: '',\n    placeholders: DefaultPlaceholders,\n    quiet: false,\n    transports: [],\n    customFunctions: [],\n    logType: 'log',\n    logStack: true,\n};\nexport class LogUpTs {\n    constructor(customOptions, setInternals) {\n        customOptions = customOptions || {};\n        // set loguptsoptions\n        this.options = {\n            prefix: customOptions.prefix !== undefined ? customOptions.prefix : defaultOptions.prefix,\n            postfix: customOptions.postfix !== undefined ? customOptions.postfix : defaultOptions.postfix,\n            placeholders: customOptions.placeholders !== undefined ? customOptions.placeholders : defaultOptions.placeholders,\n            quiet: customOptions.quiet !== undefined ? customOptions.quiet : defaultOptions.quiet,\n            transports: customOptions.transports !== undefined ? customOptions.transports : defaultOptions.transports,\n            customFunctions: customOptions.customFunctions !== undefined ? customOptions.customFunctions : defaultOptions.customFunctions,\n            logType: customOptions.logType !== undefined ? customOptions.logType : defaultOptions.logType,\n            logStack: customOptions.logStack !== undefined ? customOptions.logStack : defaultOptions.logStack,\n        };\n        // set defaultinternals\n        this.internals = {\n            service: 'LOG'\n        };\n        for (let key in setInternals || {}) {\n            this.internals[key] = setInternals[key];\n        }\n    }\n    mergeOptions(customOptions) {\n        return {\n            prefix: customOptions.prefix !== undefined ? customOptions.prefix : this.options.prefix,\n            postfix: customOptions.postfix !== undefined ? customOptions.postfix : this.options.postfix,\n            placeholders: customOptions.placeholders !== undefined ? customOptions.placeholders : this.options.placeholders,\n            quiet: customOptions.quiet !== undefined ? customOptions.quiet : this.options.quiet,\n            transports: customOptions.transports !== undefined ? customOptions.transports : this.options.transports,\n            customFunctions: customOptions.customFunctions !== undefined ? customOptions.customFunctions : this.options.customFunctions,\n            logType: customOptions.logType !== undefined ? customOptions.logType : this.options.logType,\n            logStack: customOptions.logStack !== undefined ? customOptions.logStack : this.options.logStack,\n        };\n    }\n    custom(customOptions, setInternals, message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // setoptions\n            let opt = this.mergeOptions(customOptions);\n            // set new Internalvalues\n            for (let key in setInternals) {\n                this.internals[key] = setInternals[key];\n            }\n            // generate string\n            let str = `${opt.prefix}${message}${opt.postfix}`;\n            str = replaceComplex((this.options.placeholders || []), str, this.internals);\n            let asyncThings = [];\n            // add transports\n            for (let transport of opt.transports || []) {\n                asyncThings.push(transport.exec(this.internals, str));\n            }\n            for (let asyncExec of opt.customFunctions || []) {\n                asyncThings.push(asyncExec(str, this.internals, opt));\n            }\n            yield Promise.all(asyncThings);\n            // check \n            if (!opt.quiet && (console[opt.logType || 'log'] !== undefined)) {\n                console[opt.logType || 'log'](str);\n            }\n            return str;\n        });\n    }\n    ;\n    log(str, customOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.custom(customOptions || {}, { service: 'LOG' }, str);\n        });\n    }\n    error(error, customOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let opt = this.mergeOptions(customOptions || {});\n            // set logtype to error -> console.error(str)\n            opt.logType = 'error';\n            let str = error instanceof Error ? `${error.message}${(opt.logStack && error.stack !== undefined) ? '\\n' + error.stack : ''}` : error;\n            return yield this.custom(opt, { service: 'ERROR' }, str);\n        });\n    }\n}\n"],"sourceRoot":""}